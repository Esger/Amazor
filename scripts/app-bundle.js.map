{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/maze.js","components/players.js","resources/index.js","resources/binding-behaviors/keystrokes.js","/Volumes/Users 3Tb/Users/Esger/Sites/AshWare/Amazor/Amazor/src/components/player.js"],"names":["App","eventAggregator","handleKeyInput","event","keycode","keyCode","which","keys","left","ea","publish","up","right","down","activate","self","document","addEventListener","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","gamePosition","x","y","gameWon","subscribe","directions","hasOwnProperty","response","moveMaze","console","log","xy","MazeCustomElement","hasWall","cells","width","height","wallPositions","player","direction","wallClass","cell","join","newMaze","totalCells","Array","unvis","i","j","currentCell","Math","floor","random","path","visited","pot","neighbors","l","push","length","next","pop","attached","PlayersCustomElement","players","movePlayer","areTogether","name","firstPlayer","move","Keystrokes","myKeypressCallback","keypressInput","bind","window","deactivate","removeEventListener","e"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class App {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n    }\n\n    handleKeyInput = (event) => {\n        var keycode = event.keyCode || event.which; // also for cross-browser compatible\n        switch (keycode) {\n            case this.keys.left:\n                this.ea.publish('keyPressed', \"left\");\n                break;\n            case this.keys.up:\n                this.ea.publish('keyPressed', \"up\");\n                break;\n            case this.keys.right:\n                this.ea.publish('keyPressed', \"right\");\n                break;\n            case this.keys.down:\n                this.ea.publish('keyPressed', \"down\");\n                break;\n            default:\n                this.ea.publish('keyPressed', \"somekey\");\n        }\n    }\n\n    activate() {\n        let self = this;\n\n        document.addEventListener('keydown', self.handleKeyInput, true);\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class BoardCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.gamePosition = {\n            x: -40,\n            y: -40\n        };\n        this.gameWon = false;\n        this.ea.subscribe('keyPressed', response => {\n            let self = this;\n            let directions = {\n                'left': [1, 0],\n                'right': [-1, 0],\n                'up': [0, 1],\n                'down': [0, -1]\n            };\n            if (directions.hasOwnProperty(response)) {\n                self.moveMaze(directions[response]);\n            }\n        });\n        this.ea.subscribe('allTogether', response => {\n            this.gameWon = true;\n            console.log(this.gameWon);\n        })\n    }\n\n    moveMaze(xy) {\n        let self = this;\n        this.gamePosition.x += 4 * xy[0];\n        this.gamePosition.y += 4 * xy[1];\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class MazeCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.ea.subscribe('checkWall', response => {\n            if (!this.hasWall(response)) {\n                this.ea.publish('movePlayer', response);\n            }\n        });\n        this.cells = [];\n        this.width = 20;\n        this.height = 20;\n    }\n\n    hasWall(response) {\n        let wallPositions = {\n            'left': 3,\n            'right': 1,\n            'up': 0,\n            'down': 2\n        };\n        return this.cells[response.player.y][response.player.x][wallPositions[response.direction]] == 1;\n    }\n\n    wallClass(cell) {\n        return 'wall' + cell.join('');\n    }\n\n    newMaze(x, y) {\n        // Thanks to https://github.com/dstromberg2/maze-generator\n\n        // Establish variables and starting grid\n        let totalCells = x * y;\n        let cells = new Array();\n        let unvis = new Array();\n        for (let i = 0; i < y; i++) {\n            cells[i] = new Array();\n            unvis[i] = new Array();\n            for (let j = 0; j < x; j++) {\n                cells[i][j] = [1, 1, 1, 1];\n                unvis[i][j] = true;\n            }\n        }\n\n        // Set a random position to start from\n        let currentCell = [Math.floor(Math.random() * y), Math.floor(Math.random() * x)];\n        let path = [currentCell];\n        unvis[currentCell[0]][currentCell[1]] = false;\n        let visited = 1;\n\n        // Loop through all available cell positions\n        while (visited < totalCells) {\n            // Determine neighboring cells\n            let pot = [[currentCell[0] - 1, currentCell[1], 0, 2],\n            [currentCell[0], currentCell[1] + 1, 1, 3],\n            [currentCell[0] + 1, currentCell[1], 2, 0],\n            [currentCell[0], currentCell[1] - 1, 3, 1]];\n            let neighbors = new Array();\n\n            // Determine if each neighboring cell is in game grid, and whether it has already been checked\n            for (let l = 0; l < 4; l++) {\n                if (pot[l][0] > -1 && pot[l][0] < y && pot[l][1] > -1 && pot[l][1] < x && unvis[pot[l][0]][pot[l][1]]) { neighbors.push(pot[l]); }\n            }\n\n            // If at least one active neighboring cell has been found\n            if (neighbors.length) {\n                // Choose one of the neighbors at random\n                let next = neighbors[Math.floor(Math.random() * neighbors.length)];\n\n                // Remove the wall between the current cell and the chosen neighboring cell\n                cells[currentCell[0]][currentCell[1]][next[2]] = 0;\n                cells[next[0]][next[1]][next[3]] = 0;\n\n                // Mark the neighbor as visited, and set it as the current cell\n                unvis[next[0]][next[1]] = false;\n                visited++;\n                currentCell = [next[0], next[1]];\n                path.push(currentCell);\n            }\n            // Otherwise go back up a step and keep going\n            else {\n                currentCell = path.pop();\n            }\n        }\n        return cells;\n    }\n\n    attached() {\n        this.cells = this.newMaze(this.width, this.height);\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class PlayersCustomElement {\n\n    constructor(eventAggregator) {\n\n        this.ea = eventAggregator;\n\n        this.ea.subscribe('keyPressed', response => {\n            for (let i = 0; i < this.players.length; i++) {\n                this.ea.publish('checkWall', { direction: response, player: this.players[i] });\n            }\n        });\n\n        this.ea.subscribe('movePlayer', response => {\n            this.movePlayer(response);\n            if (this.areTogether()) {\n                this.ea.publish('allTogether');\n            }\n        });\n\n        this.players = [\n            {\n                name: 'black',\n                x: 5,\n                y: 5\n            },\n            {\n                name: 'white',\n                x: 14,\n                y: 14\n            }\n        ]\n    }\n\n    areTogether() {\n        let firstPlayer = this.players[0];\n        for (let i = 1; i < this.players.length; i++) {\n            if (this.players[i].x !== firstPlayer.x) {\n                return false;\n            }\n            if (this.players[i].y !== firstPlayer.y) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    movePlayer(response) {\n        let self = this;\n        let directions = {\n            'left': [-1, 0],\n            'right': [+1, 0],\n            'up': [0, -1],\n            'down': [0, +1]\n        };\n        let move = function (xy) {\n            if (response.player.name == 'black') {\n                self.players[0].x += xy[0];\n                self.players[0].y += xy[1];\n            } else {\n                self.players[1].x += xy[0];\n                self.players[1].y += xy[1];\n            }\n        };\n        move(directions[response.direction]);\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Keystrokes {\n    constructor() {\n        this.myKeypressCallback = this.keypressInput.bind(this);\n    }\n\n    activate() {\n        window.addEventListener('keypress', this.myKeypressCallback, false);\n    }\n\n    deactivate() {\n        window.removeEventListener('keypress', this.myKeypressCallback);\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        console.log(e);\n    }\n}\n",null],"sourceRoot":"../src"}