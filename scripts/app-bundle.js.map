{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/maze.js","components/players.js","components/win.js","resources/index.js","resources/binding-behaviors/keystrokes.js"],"names":["App","eventAggregator","handleKeyInput","event","keycode","keyCode","which","keys","left","ea","publish","up","right","down","activate","self","$body","document","addEventListener","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","gamePosition","scale","subscribe","directions","hasOwnProperty","response","moveMaze","x","centerX","y","centerY","resetBoard","handleTouch","boardSize","$","board","height","clickX","layerX","clickY","layerY","direction","console","log","xy","Math","round","attached","MazeCustomElement","hasWall","makeNewMaze","cells","width","wallPositions","player","wallClass","cell","join","newMaze","totalCells","Array","unvis","i","j","currentCell","floor","random","path","visited","pot","neighbors","l","push","length","next","pop","PlayersCustomElement","players","movePlayer","adjustScale","areTogether","resetPlayers","name","minX","min","apply","map","o","maxX","max","minY","maxY","dX","ceil","dY","dMax","firstPlayer","move","WinCustomElement","showWin","restart","Keystrokes","myKeypressCallback","keypressInput","bind","window","deactivate","removeEventListener","e"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\n\n@inject(EventAggregator)\n\nexport class App {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n        // this.touchEvent = {\n        //     'startX': null,\n        //     'startY': null,\n        //     'endX': null,\n        //     'endY': null,\n        // };\n    }\n\n    handleKeyInput = (event) => {\n        var keycode = event.keyCode || event.which; // also for cross-browser compatible\n        switch (keycode) {\n            case this.keys.left:\n                this.ea.publish('keyPressed', \"left\");\n                break;\n            case this.keys.up:\n                this.ea.publish('keyPressed', \"up\");\n                break;\n            case this.keys.right:\n                this.ea.publish('keyPressed', \"right\");\n                break;\n            case this.keys.down:\n                this.ea.publish('keyPressed', \"down\");\n                break;\n            default:\n                this.ea.publish('keyPressed', \"somekey\");\n        }\n    }\n\n    // handleSwipe() {\n    //     let thresHold = 50;\n    //     let startX = this.touchEvent.startX;\n    //     let startY = this.touchEvent.startY;\n    //     let dX = this.touchEvent.endX - this.touchEvent.startX;\n    //     let dY = this.touchEvent.endY - this.touchEvent.startY;\n    //     let vertical = (Math.abs(dX) < Math.abs(dY));\n    //     let horizontal = (Math.abs(dX) > Math.abs(dY));\n    //     let left = (dX < -thresHold && Math.abs(dY) < thresHold);\n    //     let right = (dX > thresHold && Math.abs(dY) < thresHold);\n    //     let up = (dY < -thresHold && Math.abs(dX) < thresHold);\n    //     let down = (dY > thresHold && Math.abs(dX) < thresHold);\n    //     if (vertical) {\n    //         if (up) {\n    //             this.ea.publish('keyPressed', \"up\");\n    //         }\n    //         if (down) {\n    //             this.ea.publish('keyPressed', \"down\");\n    //         }\n    //     }\n    //     if (horizontal) {\n    //         if (left) {\n    //             this.ea.publish('keyPressed', \"left\");\n    //         }\n    //         if (right) {\n    //             this.ea.publish('keyPressed', \"right\");\n    //         }\n    //     }\n    // }\n\n    activate() {\n        let self = this;\n        let $body = $('body');\n\n        document.addEventListener('keydown', self.handleKeyInput, true);\n        // $body.on('touchstart', function (event) {\n        //     self.touchEvent.startX = event.originalEvent.touches[0].clientX;\n        //     self.touchEvent.startY = event.originalEvent.touches[0].clientY;\n        // });\n        // $body.on('touchend', function (event) {\n        //     self.touchEvent.endX = event.originalEvent.changedTouches[0].clientX;\n        //     self.touchEvent.endY = event.originalEvent.changedTouches[0].clientY;\n        //     self.handleSwipe();\n        // });\n\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class BoardCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.gamePosition = {};\n        this.scale = 1;\n        this.ea.subscribe('keyPressed', response => {\n            let self = this;\n            let directions = {\n                'left': [1, 0],\n                'right': [-1, 0],\n                'up': [0, 1],\n                'down': [0, -1]\n            };\n            if (directions.hasOwnProperty(response)) {\n                self.moveMaze(directions[response]);\n            }\n        });\n        this.scale = 1;\n        this.ea.subscribe('scaleChange', response => {\n            this.scale = (response > 1) ? 1 : response;\n        });\n        this.ea.subscribe('centerChange', response => {\n            this.gamePosition.x = -response.centerX * 6.4;\n            this.gamePosition.y = -response.centerY * 6.4;\n        });\n        this.ea.subscribe('restart', response => {\n            this.resetBoard();\n        });\n\n    }\n\n    handleTouch(event) {\n        let boardSize = $(this.board).height();\n        let clickX = event.layerX;\n        let clickY = event.layerY;\n        let direction = 'undefined';\n        if (clickY <= clickX) {\n            if (clickY <= (boardSize - clickX)) {\n                direction = 'up';\n            } else {\n                direction = 'right';\n            }\n        } else {\n            if (clickY <= (boardSize - clickX)) {\n                direction = 'left';\n            } else {\n                direction = 'down';\n            }\n        }\n        this.ea.publish('keyPressed', direction);\n        console.log(direction);\n    }\n\n    moveMaze(xy) {\n        let self = this;\n        this.gamePosition.x = Math.round(this.gamePosition.x + 4 * xy[0]);\n        this.gamePosition.y = Math.round(this.gamePosition.y + 4 * xy[1]);\n    }\n\n    resetBoard() {\n        this.gamePosition = {\n            x: -64,\n            y: -64\n        };\n        this.scale = 1;\n    }\n\n    attached() {\n        this.resetBoard();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class MazeCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.ea.subscribe('checkWall', response => {\n            if (!this.hasWall(response)) {\n                this.ea.publish('movePlayer', response);\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.makeNewMaze();\n        });\n        this.cells = [];\n        this.width = 20;\n        this.height = 20;\n    }\n\n    hasWall(response) {\n        let wallPositions = {\n            'left': 3,\n            'right': 1,\n            'up': 0,\n            'down': 2\n        };\n        if (wallPositions.hasOwnProperty(response.direction)) {\n            return this.cells[response.player.y][response.player.x][wallPositions[response.direction]] == 1;\n        }\n    }\n\n    wallClass(cell) {\n        return 'wall' + cell.join('');\n    }\n\n    makeNewMaze() {\n        this.cells = this.newMaze(this.width, this.height);\n    }\n\n    newMaze(x, y) {\n        // Thanks to https://github.com/dstromberg2/maze-generator\n\n        // Establish variables and starting grid\n        let totalCells = x * y;\n        let cells = new Array();\n        let unvis = new Array();\n        for (let i = 0; i < y; i++) {\n            cells[i] = new Array();\n            unvis[i] = new Array();\n            for (let j = 0; j < x; j++) {\n                cells[i][j] = [1, 1, 1, 1];\n                unvis[i][j] = true;\n            }\n        }\n\n        // Set a random position to start from\n        let currentCell = [Math.floor(Math.random() * y), Math.floor(Math.random() * x)];\n        let path = [currentCell];\n        unvis[currentCell[0]][currentCell[1]] = false;\n        let visited = 1;\n\n        // Loop through all available cell positions\n        while (visited < totalCells) {\n            // Determine neighboring cells\n            let pot = [[currentCell[0] - 1, currentCell[1], 0, 2],\n            [currentCell[0], currentCell[1] + 1, 1, 3],\n            [currentCell[0] + 1, currentCell[1], 2, 0],\n            [currentCell[0], currentCell[1] - 1, 3, 1]];\n            let neighbors = new Array();\n\n            // Determine if each neighboring cell is in game grid, and whether it has already been checked\n            for (let l = 0; l < 4; l++) {\n                if (pot[l][0] > -1 && pot[l][0] < y && pot[l][1] > -1 && pot[l][1] < x && unvis[pot[l][0]][pot[l][1]]) { neighbors.push(pot[l]); }\n            }\n\n            // If at least one active neighboring cell has been found\n            if (neighbors.length) {\n                // Choose one of the neighbors at random\n                let next = neighbors[Math.floor(Math.random() * neighbors.length)];\n\n                // Remove the wall between the current cell and the chosen neighboring cell\n                cells[currentCell[0]][currentCell[1]][next[2]] = 0;\n                cells[next[0]][next[1]][next[3]] = 0;\n\n                // Mark the neighbor as visited, and set it as the current cell\n                unvis[next[0]][next[1]] = false;\n                visited++;\n                currentCell = [next[0], next[1]];\n                path.push(currentCell);\n            }\n            // Otherwise go back up a step and keep going\n            else {\n                currentCell = path.pop();\n            }\n        }\n        return cells;\n    }\n\n    attached() {\n        this.makeNewMaze();\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class PlayersCustomElement {\n\n    constructor(eventAggregator) {\n\n        this.ea = eventAggregator;\n        this.ea.subscribe('keyPressed', response => {\n            for (let i = 0; i < this.players.length; i++) {\n                this.ea.publish('checkWall', { direction: response, player: this.players[i] });\n            }\n        });\n        this.ea.subscribe('movePlayer', response => {\n            this.movePlayer(response);\n            this.adjustScale();\n            if (this.areTogether()) {\n                this.ea.publish('allTogether');\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.resetPlayers();\n        });\n\n        this.players = [];\n    }\n\n    resetPlayers() {\n        this.players = [\n            {\n                name: 'black',\n                x: 5,\n                y: 5\n            },\n            {\n                name: 'white',\n                x: 14,\n                y: 14\n            }\n        ];\n    }\n\n    adjustScale() {\n        let minX = Math.min.apply(Math, this.players.map(function (o) { return o.x; }));\n        let maxX = Math.max.apply(Math, this.players.map(function (o) { return o.x; }));\n        let minY = Math.min.apply(Math, this.players.map(function (o) { return o.y; }));\n        let maxY = Math.max.apply(Math, this.players.map(function (o) { return o.y; }));\n        let dX = maxX - minX;\n        let centerX = Math.ceil((maxX + minX) / 2);\n        let centerY = Math.ceil((maxY + minY) / 2);\n        let dY = maxY - minY;\n        let dMax = Math.max(dX, dY);\n        let scale = Math.round(9 / dMax * 10) / 10;\n        this.ea.publish('scaleChange', scale);\n        this.ea.publish('centerChange', { 'centerX': centerX, 'centerY': centerY });\n    }\n\n    areTogether() {\n        let firstPlayer = this.players[0];\n        for (let i = 1; i < this.players.length; i++) {\n            if (this.players[i].x !== firstPlayer.x) {\n                return false;\n            }\n            if (this.players[i].y !== firstPlayer.y) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    movePlayer(response) {\n        let self = this;\n        let directions = {\n            'left': [-1, 0],\n            'right': [+1, 0],\n            'up': [0, -1],\n            'down': [0, +1]\n        };\n        let move = function (xy) {\n            if (response.player.name == 'black') {\n                self.players[0].x += xy[0];\n                self.players[0].y += xy[1];\n            } else {\n                self.players[1].x += xy[0];\n                self.players[1].y += xy[1];\n            }\n        };\n        if (directions.hasOwnProperty(response.direction)) {\n            move(directions[response.direction]);\n        }\n    }\n\n    attached() {\n        this.resetPlayers();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class WinCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showWin = false;\n        this.ea.subscribe('allTogether', response => {\n            this.showWin = true;\n            console.log(this.showWin);\n        });\n    }\n\n    restart() {\n        this.ea.publish('restart');\n        this.showWin = false;\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Keystrokes {\n    constructor() {\n        this.myKeypressCallback = this.keypressInput.bind(this);\n    }\n\n    activate() {\n        window.addEventListener('keypress', this.myKeypressCallback, false);\n    }\n\n    deactivate() {\n        window.removeEventListener('keypress', this.myKeypressCallback);\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        console.log(e);\n    }\n}\n"],"sourceRoot":"../src"}