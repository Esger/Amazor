{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/maze.js","components/players.js","components/win.js","resources/index.js","resources/binding-behaviors/keystrokes.js"],"names":["App","eventAggregator","handleKeyInput","event","keycode","keyCode","which","keys","left","ea","publish","up","right","down","activate","self","$body","document","addEventListener","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","gamePosition","scale","subscribe","response","moveMaze","resetBoard","handleTouch","board","$","boardSize","height","clickX","clickY","layerX","layerY","offset","touch","touches","pageX","pageY","top","direction","panbox","mazeSize","minGamePosition","maxGamePosition","boardCenter","moveX","centerX","moveY","centerY","x","Math","max","min","y","attached","MazeCustomElement","hasWall","makeNewMaze","cells","width","wallPositions","hasOwnProperty","player","wallClass","cell","join","newMaze","totalCells","Array","unvis","i","j","currentCell","floor","random","path","visited","pot","neighbors","l","push","length","next","pop","PlayersCustomElement","players","movePlayer","areTogether","adjustScale","resetPlayers","name","step","angle","minX","apply","map","o","maxX","minY","maxY","panBoxPadding","panBox","bottom","size","firstPlayer","directions","angles","move","xy","WinCustomElement","showWin","restart","Keystrokes","myKeypressCallback","keypressInput","bind","window","deactivate","removeEventListener","e"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\n\n@inject(EventAggregator)\n\nexport class App {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n    }\n\n    handleKeyInput = (event) => {\n        var keycode = event.keyCode || event.which; // also for cross-browser compatible\n        switch (keycode) {\n            case this.keys.left:\n                this.ea.publish('keyPressed', \"left\");\n                break;\n            case this.keys.up:\n                this.ea.publish('keyPressed', \"up\");\n                break;\n            case this.keys.right:\n                this.ea.publish('keyPressed', \"right\");\n                break;\n            case this.keys.down:\n                this.ea.publish('keyPressed', \"down\");\n                break;\n            default:\n                this.ea.publish('keyPressed', \"somekey\");\n        }\n    }\n\n    activate() {\n        let self = this;\n        let $body = $('body');\n\n        document.addEventListener('keydown', self.handleKeyInput, true);\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class BoardCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.gamePosition = {};\n        this.scale = 1;\n        this.scale = 1;\n        this.ea.subscribe('scaleChange', response => {\n            this.scale = (response > 1) ? 1 : response;\n        });\n        this.ea.subscribe('centerChange', response => {\n            this.moveMaze(response);\n        });\n        this.ea.subscribe('restart', response => {\n            this.resetBoard();\n        });\n\n    }\n\n    handleTouch(event) {\n        let board = $(this.board);\n        let boardSize = board.height();\n        var clickX, clickY;\n        if (event.layerX) {\n            clickX = event.layerX;\n            clickY = event.layerY;\n        } else {\n            let offset = board.offset();\n            let touch = event.touches[0];\n            clickX = touch.pageX - offset.left;\n            clickY = touch.pageY - offset.top;\n        }\n        let direction = 'undefined';\n        if (clickY <= clickX) {\n            if (clickY <= (boardSize - clickX)) {\n                direction = 'up';\n            } else {\n                direction = 'right';\n            }\n        } else {\n            if (clickY <= (boardSize - clickX)) {\n                direction = 'left';\n            } else {\n                direction = 'down';\n            }\n        }\n        this.ea.publish('keyPressed', direction);\n    }\n\n    moveMaze(panbox) {\n        let boardSize = 80;\n        let mazeSize = 128 * this.scale;\n        let minGamePosition = 0;\n        let maxGamePosition = boardSize - mazeSize;\n\n        let boardCenter = 6.25 * 6.4;\n        let moveX = boardCenter - panbox.centerX * this.scale * 6.4;\n        let moveY = boardCenter - panbox.centerY * this.scale * 6.4;\n        this.gamePosition.x = Math.max(Math.min(moveX, minGamePosition), maxGamePosition);\n        this.gamePosition.y = Math.max(Math.min(moveY, minGamePosition), maxGamePosition);\n    }\n\n    resetBoard() {\n        this.gamePosition = {\n            x: -3,\n            y: -3\n        };\n        this.scale = 1;\n    }\n\n    attached() {\n        this.resetBoard();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class MazeCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.ea.subscribe('checkWall', response => {\n            if (!this.hasWall(response)) {\n                this.ea.publish('movePlayer', response);\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.makeNewMaze();\n        });\n        this.cells = [];\n        this.width = 20;\n        this.height = 20;\n    }\n\n    hasWall(response) {\n        let wallPositions = {\n            'left': 3,\n            'right': 1,\n            'up': 0,\n            'down': 2\n        };\n        if (wallPositions.hasOwnProperty(response.direction)) {\n            return this.cells[response.player.y][response.player.x][wallPositions[response.direction]] == 1;\n        }\n    }\n\n    wallClass(cell) {\n        return 'wall' + cell.join('');\n    }\n\n    makeNewMaze() {\n        this.cells = this.newMaze(this.width, this.height);\n    }\n\n    newMaze(x, y) {\n        // Thanks to https://github.com/dstromberg2/maze-generator\n\n        // Establish variables and starting grid\n        let totalCells = x * y;\n        let cells = new Array();\n        let unvis = new Array();\n        for (let i = 0; i < y; i++) {\n            cells[i] = new Array();\n            unvis[i] = new Array();\n            for (let j = 0; j < x; j++) {\n                cells[i][j] = [1, 1, 1, 1];\n                unvis[i][j] = true;\n            }\n        }\n\n        // Set a random position to start from\n        let currentCell = [Math.floor(Math.random() * y), Math.floor(Math.random() * x)];\n        let path = [currentCell];\n        unvis[currentCell[0]][currentCell[1]] = false;\n        let visited = 1;\n\n        // Loop through all available cell positions\n        while (visited < totalCells) {\n            // Determine neighboring cells\n            let pot = [[currentCell[0] - 1, currentCell[1], 0, 2],\n            [currentCell[0], currentCell[1] + 1, 1, 3],\n            [currentCell[0] + 1, currentCell[1], 2, 0],\n            [currentCell[0], currentCell[1] - 1, 3, 1]];\n            let neighbors = new Array();\n\n            // Determine if each neighboring cell is in game grid, and whether it has already been checked\n            for (let l = 0; l < 4; l++) {\n                if (pot[l][0] > -1 && pot[l][0] < y && pot[l][1] > -1 && pot[l][1] < x && unvis[pot[l][0]][pot[l][1]]) { neighbors.push(pot[l]); }\n            }\n\n            // If at least one active neighboring cell has been found\n            if (neighbors.length) {\n                // Choose one of the neighbors at random\n                let next = neighbors[Math.floor(Math.random() * neighbors.length)];\n\n                // Remove the wall between the current cell and the chosen neighboring cell\n                cells[currentCell[0]][currentCell[1]][next[2]] = 0;\n                cells[next[0]][next[1]][next[3]] = 0;\n\n                // Mark the neighbor as visited, and set it as the current cell\n                unvis[next[0]][next[1]] = false;\n                visited++;\n                currentCell = [next[0], next[1]];\n                path.push(currentCell);\n            }\n            // Otherwise go back up a step and keep going\n            else {\n                currentCell = path.pop();\n            }\n        }\n        return cells;\n    }\n\n    attached() {\n        this.makeNewMaze();\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class PlayersCustomElement {\n\n    constructor(eventAggregator) {\n\n        this.ea = eventAggregator;\n        this.ea.subscribe('keyPressed', response => {\n            for (let i = 0; i < this.players.length; i++) {\n                this.ea.publish('checkWall', { direction: response, player: this.players[i] });\n            }\n        });\n        this.ea.subscribe('movePlayer', response => {\n            this.movePlayer(response);\n            if (this.areTogether()) {\n                this.ea.publish('allTogether');\n            }\n            // No need for doing this for every player\n            // if (response.player.name == 'white') {\n            this.adjustScale();\n            // }\n        });\n        this.ea.subscribe('restart', response => {\n            this.resetPlayers();\n        });\n        this.players = [];\n    }\n\n    resetPlayers() {\n        this.players = [\n            {\n                name: 'black',\n                step: false,\n                angle: 90,\n                x: 5,\n                y: 5\n            },\n            {\n                name: 'white',\n                step: false,\n                angle: 90,\n                x: 13,\n                y: 13\n            }\n        ];\n        this.adjustScale();\n    }\n\n    adjustScale() {\n        let minX = Math.min.apply(Math, this.players.map(function (o) { return o.x; }));\n        let maxX = Math.max.apply(Math, this.players.map(function (o) { return o.x; }));\n        let minY = Math.min.apply(Math, this.players.map(function (o) { return o.y; }));\n        let maxY = Math.max.apply(Math, this.players.map(function (o) { return o.y; }));\n        let panBoxPadding = 3;\n        let panBox = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0,\n            centerX: 0,\n            centerY: 0,\n            size: 0\n        };\n        panBox.top = Math.max(minY - panBoxPadding, 0);\n        panBox.right = Math.min(maxX + panBoxPadding + 1, 20);\n        panBox.bottom = Math.min(maxY + panBoxPadding + 1, 20);\n        panBox.left = Math.max(minX - panBoxPadding, 0);\n\n        panBox.width = panBox.right - panBox.left;\n        panBox.height = panBox.bottom - panBox.top;\n\n        panBox.size = Math.max(panBox.width, panBox.height);\n        let scale = Math.min(12.5 / panBox.size, 1);\n\n        panBox.centerX = (panBox.right + panBox.left) / 2;\n        panBox.centerY = (panBox.bottom + panBox.top) / 2;\n\n        this.ea.publish('scaleChange', scale);\n        this.ea.publish('centerChange', panBox);\n    }\n\n    areTogether() {\n        let firstPlayer = this.players[0];\n        for (let i = 1; i < this.players.length; i++) {\n            if (this.players[i].x !== firstPlayer.x) {\n                return false;\n            }\n            if (this.players[i].y !== firstPlayer.y) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    movePlayer(response) {\n        let self = this;\n        let directions = {\n            'up': [0, -1],\n            'right': [+1, 0],\n            'down': [0, +1],\n            'left': [-1, 0]\n        };\n        let angles = {\n            'up': -90,\n            'right': 0,\n            'down': 90,\n            'left': 180\n        }\n        let move = function (xy) {\n            if (response.player.name == 'black') {\n                self.players[0].x += xy[0];\n                self.players[0].y += xy[1];\n                self.players[0].step = !self.players[0].step;\n                self.players[0].angle = angles[response.direction]\n            } else {\n                self.players[1].x += xy[0];\n                self.players[1].y += xy[1];\n                self.players[1].step = !self.players[1].step;\n                self.players[1].angle = angles[response.direction]\n            }\n        };\n        if (directions.hasOwnProperty(response.direction)) {\n            move(directions[response.direction]);\n        }\n    }\n\n    attached() {\n        this.resetPlayers();\n        this.adjustScale();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class WinCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showWin = false;\n        this.ea.subscribe('allTogether', response => {\n            this.showWin = true;\n        });\n    }\n\n    restart() {\n        this.ea.publish('restart');\n        this.showWin = false;\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Keystrokes {\n    constructor() {\n        this.myKeypressCallback = this.keypressInput.bind(this);\n    }\n\n    activate() {\n        window.addEventListener('keypress', this.myKeypressCallback, false);\n    }\n\n    deactivate() {\n        window.removeEventListener('keypress', this.myKeypressCallback);\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n    }\n}\n"],"sourceRoot":"../src"}